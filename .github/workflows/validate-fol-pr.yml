name: Validate FOL with Check Run

on:
  pull_request:
    types: [opened]
    branches: [main]
    paths:
      - "fol/**/*.fol"
      - "fol/*.fol" # fol/ directly below files are also included

jobs:
  validate-fol:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write # Permission for recording Check Run results
      pull-requests: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch the entire history to make both base and head commit available

      # Check if there were any changes to fol files in the latest commit
      - name: Check for fol changes in latest commit
        id: check_fol_changes
        run: |
          CHANGES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files in last commit: $CHANGES"
          if echo "$CHANGES" | grep -q '^fol/'; then
            echo "fol_changes=true" >> $GITHUB_OUTPUT
          else
            echo "fol_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit workflow if no fol changes in latest commit
        if: steps.check_fol_changes.outputs.fol_changes != 'true'
        run: |
          echo "No new fol changes in latest commit. Exiting workflow."
          exit 0

      # The following steps are only executed if there were changes to fol files in the latest commit

      - name: Identify changed .fol files (for validation)
        id: find_files
        run: |
          echo "Base SHA: ${{ github.event.pull_request.base.sha }}"
          echo "Head SHA: ${{ github.event.pull_request.head.sha }}"
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} -- "fol/*.fol" "fol/**/*.fol")
          echo "CHANGED_FILES: [$CHANGED_FILES]"
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT

      - name: Build JSON payload for validation API
        id: build_payload
        run: |
          # Convert the output of FILES to null-separated and process with xargs -0
          FILES=$(printf '%s\0' "${{ steps.find_files.outputs.files }}" | xargs -0 echo)
          echo "DEBUG: Files = [$FILES]"
          PAYLOAD="{\"files\":["
          for file in $FILES; do
            # Safely escape the file name as a JSON string
            ESCAPED_FILE=$(printf '%s' "$file" | jq -Rs .)
            if [ -f "$file" ]; then
              CONTENT=$(jq -Rs < "$file")
            else
              CONTENT="\"\""
            fi
            PAYLOAD="${PAYLOAD}{\"path\":${ESCAPED_FILE},\"content\":${CONTENT}},"
          done
          # Remove the last comma and close the JSON array
          PAYLOAD="${PAYLOAD%,}]}"
          echo "$PAYLOAD" > payload.json
          echo "----- Generated payload.json -----"
          cat payload.json
          echo "----------------------------------"
          echo "payload=$PAYLOAD" >> $GITHUB_OUTPUT

      - name: Call FOL Validation API
        id: call_api
        run: |
          STATUS=$(curl -s -o response.json -w "%{http_code}" \
            -X POST https://imperator-of-mars.ainetwork.xyz/api/fol/validate \
            -H "Content-Type: application/json" \
            -d @payload.json)
          echo "status=$STATUS" >> $GITHUB_OUTPUT
          BODY=$(cat response.json)
          echo "body=$BODY" >> $GITHUB_OUTPUT
          echo "API HTTP Status Code: $STATUS"
          echo "----- API Response (response.json) -----"
          cat response.json
          echo "-----------------------------------------"

      - name: Report Check Run (Pass)
        if: steps.call_api.outputs.status == '200'
        uses: LouisBrunner/checks-action@v1.6.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: FOL Consistency Check
          conclusion: success
          output: |
            {
              "title": "✅ .fol consistency check passed",
              "summary": "All .fol files passed the check.",
              "text": ${{ toJson(steps.find_files.outputs.files) }}
            }

      - name: Report Check Run (Fail)
        if: steps.call_api.outputs.status != '200'
        uses: LouisBrunner/checks-action@v1.6.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: FOL Consistency Check
          conclusion: failure
          output: |
            {
              "title": "❌ .fol consistency check failed",
              "summary": "Webhook response status: ${{ steps.call_api.outputs.status }}",
              "text": ${{ toJson(steps.call_api.outputs.body) }}
            }

      - name: Fail workflow on validation error
        if: steps.call_api.outputs.status != '200'
        run: exit 1

      - name: Send branch to Commit HTML API
        run: |
          echo "Getting branch name..."
          BRANCH=${GITHUB_HEAD_REF:-$(echo $GITHUB_REF | awk -F'/' '{print $3}')}
          echo "Current branch: $BRANCH"
          JSON_PAYLOAD="{\"branch\": \"${BRANCH}\"}"
          echo "Payload for commit-html API:"
          echo "$JSON_PAYLOAD"
          curl -s -o commit_response.json -w "%{http_code}" \
            -X POST https://imperator-of-mars.ainetwork.xyz/api/fol/commit-html \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD"
          echo "----- Response from commit-html API -----"
          cat commit_response.json
          echo "------------------------------------------"
